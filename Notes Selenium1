Selenium Class 1

What is software testing?
-- identify the correctness and quality of the application
What are the testing choices?
-- manuel
-- automation
when we do go for automation
--after our manuel testing is passed
--when the environment is stable
--Analyze our test suites and choose our automation tools

How many ways can we actually test?
-- manuel
--automation

What automation tools do we know about?
-- Selenium, TestNG, Cucumber, Katalon Studio, UFT/QTP

Level of testing
-- Unit testing
-- Integration testing
-- Acceptance testing
-- System testing

Types of testing?
-- Functional testing
-- NON-Functional testing
   Performance testing
   Security testing

   What is Selenium
-- a set of tools which helps us to automate web applications. it is mainly used to perform functional testing

Selenium Components:
Selenium IDE - > integrated development environment
Selenium Grid --> Firefox plugin
Selenium WebDriver
Selenium RC--> Remote control

Selenium WebDriver:
Open Source automation tool which allows us to perform actions on a web applications
WebDriver is an Interface

Advantages of selenium WebDriver:
-- Open source
-- Works with different browsers and supports cross browsing testing
-- works with different programming languages --> Java, javascript, Ruby, Python
-- OS independent --> IOS, Windows, Linux

Disadvantages of Selenium WebDriver:
-- Cannot test desktop applications
-- no technical support
-- no built in reports
-- cannot test captchas, images or videos

get() vs navigate()
-- navigate can go back and forward and refresh
-- get() will wait for the page to fully load whereas navigate() will not
-- get() will not keep the history of the browser whereas navigate() will

close() vs quit()
-- close() will close the current tab
--quit() will quit the whole browser

fullscreen() vs maximize()
-- maximize() will maximize the browser and you will still able to see control panel(back, forward, bookmarks)
-- fullscreen() method will maximize the whole application


